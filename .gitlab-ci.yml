variables:
  GIT_STRATEGY: none
include:
  - template: Code-Quality.gitlab-ci.yml

stages:
  - build
  - test

build-windows:
  stage: build
  image: 192.168.2.19:4567/roan/scroom-ci:latest
  tags:
    - Windows
  script:
    - dir
      # Prints some gcov info to confirm it is installed
    - gcov
    - pip install gcovr
    - if (Test-Path '.\scroom_build') { Remove-Item '.\scroom_build' -Recurse -Force; }
    - dir
    - cd C:\
    - C:/msys64/usr/bin/bash -c "git clone https://gitlab.com/sep-group-2/scroom"
    - dir
    - cd scroom
    - C:/msys64/usr/bin/bash -c "git checkout $CI_COMMIT_SHA"
    - C:/msys64/usr/bin/bash -c "autoreconf -i"
    - C:/msys64/usr/bin/bash -c "./configure --prefix='C:/build'"
    - C:/msys64/usr/bin/bash -c "make"
    - C:/msys64/usr/bin/bash -c "make install"
    - cp -r "C:/build" "C:/builds/$CI_PROJECT_PATH/scroom_build"
    - C:/msys64/usr/bin/bash -c "make check"
    - gcovr -s --html -o coverage_windows.html
  coverage: '/lines:\ \d+\.\d+\%/'
  artifacts:
    paths:
      - scroom_build/
      - coverage_windows.html

build-linux:
  image: gcc
  stage: build
  script:
      # Temp, should be moved to script
    - apt install -y gcovr
    - bash ./build_scripts/init.sh
    - gcovr -s --html -o coverage_linux.html
  coverage: '/lines:\ \d+\.\d+\%/'
  artifacts:
      paths:
        - coverage_linux.html

code_quality:
  artifacts:
    paths: [gl-code-quality-report.json]
